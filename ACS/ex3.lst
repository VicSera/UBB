     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, fopen, fread, fclose, printf, scanf, fscanf              ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  import fread msvcrt.dll
    11                                  import fopen msvcrt.dll
    12                                  import fclose msvcrt.dll
    13                                  import printf msvcrt.dll
    14                                  import scanf msvcrt.dll
    15                                  import fscanf msvcrt.dll
    16                                  
    17                                  
    18                                  ; our data is declared here (the variables needed by our program)
    19                                  segment data use32 class=data
    20 00000000 00<rept>                    file_name times 50 db 0
    21 00000032 7200                        acc_mode db "r", 0
    22 00000034 FFFFFFFF                    file_descriptor dd -1
    23                                      
    24                                      len equ 100
    25 00000038 00<rept>                    text times len db 0
    26                                      
    27 0000009C 00000000                    x dd 0
    28                                      
    29 000000A0 66696C65206E616D65-         msg_filename db "file name: ", 0
    29 000000A9 3A2000             
    30 000000AC 257300                      format_filename db "%s", 0
    31                                      
    32 000000AF 6E756D626572206F66-         format db "number of words: %d", 0
    32 000000B8 20776F7264733A2025-
    32 000000C1 6400               
    33 000000C3 6E756D626572206F66-         format2 db "number of words that start with an uppercase: %d", 0
    33 000000CC 20776F726473207468-
    33 000000D5 617420737461727420-
    33 000000DE 7769746820616E2075-
    33 000000E7 70706572636173653A-
    33 000000F0 20256400           
    34                                  
    35                                  ;2. Read the name of a file. The file contains words separated by spaces
    36                                  ;a. print the number of words
    37                                  ;b. print the number of words that start with an uppercase 
    38                                  ;letter
    39                                      
    40                                  ; our code starts here
    41                                  segment code use32 class=code
    42                                      start:
    43                                          ;printf(msg_filename)
    44 00000000 68[A0000000]                    push dword msg_filename
    45 00000005 FF15[00000000]                  call [printf]
    46 0000000B 83C404                          add esp, 4
    47                                          
    48                                          ;scanf(format, file_name)
    49 0000000E 68[00000000]                    push dword file_name
    50 00000013 68[AC000000]                    push dword format_filename
    51 00000018 FF15[00000000]                  call [scanf]
    52 0000001E 83C408                          add esp, 4*2
    53                                          
    54                                          ; open the file
    55 00000021 68[32000000]                    push dword acc_mode
    56 00000026 68[00000000]                    push dword file_name
    57 0000002B FF15[00000000]                  call [fopen]
    58 00000031 83C408                          add esp, 4*2 ;clean the stack
    59                                          
    60 00000034 A3[34000000]                    mov [file_descriptor], eax ;store the file descriptor returned by fopen
    61                                          
    62                                          ;check if fopen() has successfully created the file
    63                                          ;eax != 0
    64 00000039 83F800                          cmp eax, 0
    65 0000003C 747F                            je final
    66                                          
    67 0000003E BB00000000                      mov ebx, 0
    68                                          
    69                                          do:
    70                                              ;read the text from file
    71                                              ;fscanf(file_descriptor, format_filename, text)
    72 00000043 68[38000000]                        push dword text
    73 00000048 68[AC000000]                        push dword format_filename
    74 0000004D FF35[34000000]                      push dword [file_descriptor]
    75 00000053 FF15[00000000]                      call [fscanf]
    76 00000059 83C40C                              add esp, 4*3
    77                                              
    78 0000005C 83F8FF                              cmp eax, -1
    79 0000005F 745C                                je final
    80                                          
    81 00000061 43                                  inc ebx
    82                                              
    83 00000062 BE[38000000]                        mov esi, text
    84                                              
    85 00000067 A0[38000000]                        mov al, byte [text]
    86 0000006C 3C41                                cmp al, 'A'
    87 0000006E 7D02                                jge compare_Z
    88 00000070 EB0B                                jmp continue
    89                                              
    90                                              compare_Z:
    91 00000072 3C5A                                    cmp al, 'Z'
    92                                                  jle uppercase
    93 00000074 EB07                                    jmp continue
    94                                                  
    95                                              uppercase:
    96 00000076 8005[9C000000]01                        add byte [x], 1
    97                                              
    98                                              continue:       
    99 0000007D E2C4                                    loop do
   100                                                  
   101 0000007F 53                              push dword ebx
   102 00000080 68[AF000000]                    push dword format
   103 00000085 FF35[34000000]                  push dword [file_descriptor]
   104 0000008B FF15[00000000]                  call [printf]
   105 00000091 83C40C                          add esp, 4*3
   106                                          
   107 00000094 FF35[9C000000]                  push dword [x]
   108 0000009A 68[C3000000]                    push dword format2
   109 0000009F FF35[34000000]                  push dword [file_descriptor]
   110 000000A5 FF15[00000000]                  call [printf]
   111 000000AB 83C40C                          add esp, 4*3
   112                                          
   113 000000AE FF35[34000000]                  push dword [file_descriptor]
   114 000000B4 FF15[00000000]                  call [fclose]
   115 000000BA 83C404                          add esp, 4
   116                                          
   117                                          final:
   118                                          ; exit(0)
   119 000000BD 6A00                            push    dword 0      ; push the parameter for exit onto the stack
   120 000000BF FF15[00000000]                  call    [exit]       ; call exit to terminate the program
