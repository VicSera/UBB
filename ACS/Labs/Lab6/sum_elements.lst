     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13 00000000 010000000200000003-         a DD 1, 2, 3, 4, 5
    13 00000009 000000040000000500-
    13 00000012 0000               
    14                                      len EQU ($ - a) / 4
    15                                  
    16                                  ; our code starts here
    17                                  segment code use32 class=code
    18                                      start:
    19                                          ; int a[]
    20                                          ; for (i = len(a); i > 0; i--)
    21                                          ;   sum += a[i-1]
    22                                      
    23 00000000 B800000000                      mov eax, 0  ; sum
    24 00000005 BE00000000                      mov esi, 0  ; index for a
    25 0000000A B905000000                      mov ecx, len  ; number of iterations
    26                                          
    27 0000000F E30B                            jecxz over
    28                                      
    29                                          my_loop:
    30 00000011 0386[00000000]                  add eax, [a + esi]
    31 00000017 83C604                          add esi, 4
    32 0000001A E2F5                            loop my_loop
    33                                          
    34                                          over:
    35 0000001C 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    36 0000001E FF15[00000000]                  call    [exit]       ; call exit to terminate the program
