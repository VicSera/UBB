     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14                                  
    15                                  ; our code starts here
    16                                  segment code use32 class=code
    17                                      start:
    18                                          ; for (i = 0; i < 100; i++)
    19                                          ;       j++
    20                                          
    21 00000000 B800000000                      mov EAX, 0  ; j
    22 00000005 B900000000                      mov ECX, 0  ; i
    23                                  
    24                                      loop:
    25                                          ; CONDITION
    26 0000000A 83F964                          cmp ECX, 100
    27 0000000D 7D04                            jge out
    28                                          
    29                                          ; INSTRUCTIONS
    30 0000000F 40                              inc EAX ; j++
    31                                          
    32                                          ; STEP
    33 00000010 41                              inc ECX ; i++
    34                                          
    35                                          ; LOOP BACK
    36 00000011 EBF7                            jmp loop
    37                                          
    38                                      out:
    39                                          
    40                                          ; exit(0)
    41 00000013 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    42 00000015 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
