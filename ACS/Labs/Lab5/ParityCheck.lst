     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13 00000000 0B000000                    a DD 11
    14                                  
    15                                  ; our code starts here
    16                                  segment code use32 class=code
    17                                      start:
    18                                          ; if a % 2 == 1
    19                                          ; ECX = 10
    20                                          ; else ECX = 15
    21                                          
    22 00000000 A1[00000000]                    mov EAX, [a]
    23                                          
    24 00000005 A901000000                      test EAX, 1  ; if last_digit(a) is 0
    25 0000000A 7407                            jz even  ; then go to even
    26                                          ; else execute odd
    27 0000000C B90A000000                      mov ECX, 10
    28 00000011 EB05                            jmp end
    29                                      even: 
    30 00000013 B90F000000                      mov ECX, 15
    31                                      end:
    32                                      
    33                                          ; exit(0)
    34 00000018 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    35 0000001A FF15[00000000]                  call    [exit]       ; call exit to terminate the program
    36                                  
    37                                          
    38                                          
