     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13 00000000 00                          b DB 00000000b
    14 00000001 0007                        a DW 0000011100000000b
    15                                  
    16                                  ; our code starts here
    17                                  segment code use32 class=code
    18                                      start:
    19                                          ; Replace the bits 0-3 of the byte B by the bits 8-11 of the word A.
    20                                          
    21 00000000 66A1[01000000]                  mov AX, [a]  ; bits 8-11 of a are now bits 8-11 of AX, and more precisely bits 0-3 of AH
    22 00000006 8A1D[00000000]                  mov BL, [b]
    23 0000000C 80E3F8                          and BL, 11111000b  ; set bits 0-3 of b to 0
    24 0000000F 08DC                            or AH, BL  ; set bits 0-3 of b to bits 0-3 in AH 
    25                                          
    26                                          ; exit(0)
    27 00000011 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    28 00000013 FF15[00000000]                  call [exit]
