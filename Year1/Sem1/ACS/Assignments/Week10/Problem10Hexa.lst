     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, printf               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  import printf msvcrt.dll
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13 00000000 84050000                    a dd 1412
    14                                      
    15 00000004 25780A00                    format db '%x', 10, 0
    16                                  
    17                                  ; our code starts here
    18                                  segment code use32 class=code
    19                                      printHexValue:
    20 00000000 55                              push ebp
    21 00000001 89E5                            mov ebp, esp
    22                                          
    23 00000003 8B4508                          mov eax, [ebp + 8]
    24                                          
    25 00000006 50                              push eax
    26 00000007 68[04000000]                    push dword format
    27 0000000C FF15[00000000]                  call [printf]
    28 00000012 83C408                          add esp, 4 * 2
    29                                          
    30 00000015 5D                              pop ebp
    31 00000016 C3                              ret
    32                                  
    33                                      start:
    34                                          
    35 00000017 FF35[00000000]                  push dword [a]
    36 0000001D E8DEFFFFFF                      call printHexValue
    37 00000022 83C404                          add esp, 4 * 1
    38                                      
    39                                          ; exit(0)
    40 00000025 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    41 00000027 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
