     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13 00000000 0A000000                    a DD 10
    14 00000004 0F000000                    b DD 15
    15                                  
    16                                  ; our code starts here
    17                                  segment code use32 class=code
    18                                      start:
    19                                          ; if a >= b
    20                                          ; eax = 1
    21                                          ; else eax = 2
    22                                      
    23 00000000 8B15[00000000]                  mov EDX, [a]
    24 00000006 3B15[04000000]                  cmp EDX, [b]  ; 'a - b'
    25 0000000C 7D07                            jge then
    26                                          ; else
    27 0000000E B802000000                      mov EAX, 2
    28 00000013 EB05                            jmp end
    29                                          
    30                                      then:
    31 00000015 B801000000                      mov EAX, 1
    32                                  
    33                                      end:
    34                                          ; exit(0)
    35 0000001A 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    36 0000001C FF15[00000000]                  call    [exit]       ; call exit to terminate the program
